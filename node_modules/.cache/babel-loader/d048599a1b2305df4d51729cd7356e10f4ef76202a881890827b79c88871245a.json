{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Programming\\\\Learning Frontend\\\\weather-app\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Hero from \"./Hero.jsx\";\nimport './index.css';\nimport clouds from './public/c';\n// import './output.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const URL_API = \"http://api.openweathermap.org/data/2.5/weather\";\n  const API_KEY = \"504b61bc03f3cad674cc5a1654127f69\";\n  const [city, setCity] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [temperature, setTemperature] = useState(null);\n  const [videoSrc, setVideoSrc] = useState(null);\n  const searchCity = async cityName => {\n    const response = await fetch(`${URL_API}?q=${cityName}&appid=${API_KEY}`);\n    const data = await response.json();\n    console.log(data);\n    setCity(data);\n    if (data.main && data.main.temp) {\n      setTemperature(data.main.temp);\n    } else {\n      setTemperature(null);\n    }\n    if (data.weather && data.weather.length > 0) {\n      const weatherCondition = data.weather[0].main.toLowerCase();\n      console.log(\"Weather condition:\", weatherCondition); // Add this line for debugging\n      switch (weatherCondition) {\n        case 'clouds':\n          console.log(\"Setting video source to cloudy.mp4\"); // Add this line for debugging\n          return clouds;\n          break;\n        case 'rain':\n          console.log(\"Setting video source to rainy.mp4\"); // Add this line for debugging\n          setVideoSrc('rainy.mp4');\n          break;\n        case 'clear':\n          console.log(\"Setting video source to clear.mp4\"); // Add this line for debugging\n          setVideoSrc('clear.mp4');\n          break;\n        default:\n          console.log(\"Weather condition not recognized, setting video source to null\"); // Add this line for debugging\n          setVideoSrc(null);\n      }\n    } else {\n      console.log(\"No weather data found, setting video source to null\"); // Add this line for debugging\n      setVideoSrc(null);\n    }\n  };\n  useEffect(() => {\n    searchCity(\"Poznan\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Hero, {\n      searchTerm: searchTerm,\n      setSearchTerm: setSearchTerm,\n      searchCity: searchCity,\n      cityName: city.name,\n      temperature: Math.round(temperature - 273.15),\n      videoSrc: videoSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"8nqK7YQ/16GJSEeV8lipZsM6qXU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Hero","clouds","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","URL_API","API_KEY","city","setCity","searchTerm","setSearchTerm","temperature","setTemperature","videoSrc","setVideoSrc","searchCity","cityName","response","fetch","data","json","console","log","main","temp","weather","length","weatherCondition","toLowerCase","children","name","Math","round","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/Programming/Learning Frontend/weather-app/my-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Hero from \"./Hero.jsx\";\nimport './index.css';\nimport clouds from './public/c'\n// import './output.css';\n\nconst App = () => {\n\n  const URL_API = \"http://api.openweathermap.org/data/2.5/weather\";\n  const API_KEY = \"504b61bc03f3cad674cc5a1654127f69\";\n\n  const [city, setCity] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [temperature, setTemperature] = useState(null);\n  const [videoSrc, setVideoSrc] = useState(null);\n\n  const searchCity = async (cityName) => {\n    const response = await fetch(`${URL_API}?q=${cityName}&appid=${API_KEY}`);\n    const data = await response.json();\n    console.log(data);\n    setCity(data);\n\n    if (data.main && data.main.temp) {\n      setTemperature(data.main.temp);\n    } else {\n      setTemperature(null);\n    }\n\n    if (data.weather && data.weather.length > 0) {\n      const weatherCondition = data.weather[0].main.toLowerCase();\n      console.log(\"Weather condition:\", weatherCondition); // Add this line for debugging\n      switch (weatherCondition) {\n        case 'clouds':\n          console.log(\"Setting video source to cloudy.mp4\"); // Add this line for debugging\n          return clouds;\n          break;\n        case 'rain':\n          console.log(\"Setting video source to rainy.mp4\"); // Add this line for debugging\n          setVideoSrc('rainy.mp4');\n          break;\n        case 'clear':\n          console.log(\"Setting video source to clear.mp4\"); // Add this line for debugging\n          setVideoSrc('clear.mp4');\n          break;\n        default:\n          console.log(\"Weather condition not recognized, setting video source to null\"); // Add this line for debugging\n          setVideoSrc(null);\n      }\n    } else {\n      console.log(\"No weather data found, setting video source to null\"); // Add this line for debugging\n      setVideoSrc(null);\n    }\n\n  }\n\n  useEffect(() => {\n    searchCity(\"Poznan\");\n  }, []);\n\n  return (\n    <>\n      <Hero\n        searchTerm={searchTerm}\n        setSearchTerm={setSearchTerm}\n        searchCity={searchCity}\n        cityName={city.name}\n        temperature={Math.round(temperature - 273.15)}\n        videoSrc={videoSrc}\n      />\n    </>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}